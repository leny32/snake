const _0x5761dd = _0x114c; (function (_0x2bc5b4, _0x16c785) { const _0x18942f = _0x114c, _0x3d2f8f = _0x2bc5b4(); while (!![]) { try { const _0x4592d6 = -parseInt(_0x18942f(0x144)) / 0x1 + parseInt(_0x18942f(0xff)) / 0x2 + parseInt(_0x18942f(0x103)) / 0x3 + -parseInt(_0x18942f(0x13c)) / 0x4 + parseInt(_0x18942f(0xe2)) / 0x5 * (-parseInt(_0x18942f(0x142)) / 0x6) + -parseInt(_0x18942f(0x11b)) / 0x7 + parseInt(_0x18942f(0x107)) / 0x8 * (parseInt(_0x18942f(0x129)) / 0x9); if (_0x4592d6 === _0x16c785) break; else _0x3d2f8f['push'](_0x3d2f8f['shift']()); } catch (_0x529f8b) { _0x3d2f8f['push'](_0x3d2f8f['shift']()); } } }(_0x4670, 0x7d089)); const _0x4bff09 = (function () { let _0xa27ede = !![]; return function (_0x13260d, _0x3de092) { const _0x3ecee8 = _0xa27ede ? function () { if (_0x3de092) { const _0x4b5ca7 = _0x3de092['apply'](_0x13260d, arguments); return _0x3de092 = null, _0x4b5ca7; } } : function () { }; return _0xa27ede = ![], _0x3ecee8; }; }()), _0x398dd0 = _0x4bff09(this, function () { const _0x32adea = _0x114c; return _0x398dd0[_0x32adea(0x11a)]()['search'](_0x32adea(0x105))[_0x32adea(0x11a)]()['constructor'](_0x398dd0)['search'](_0x32adea(0x105)); }); _0x398dd0(); const _0x2afc9f = (function () { let _0x21e787 = !![]; return function (_0x3fad56, _0x1c7c86) { const _0x46c4d3 = _0x21e787 ? function () { const _0x57534a = _0x114c; if (_0x1c7c86) { const _0x47d45f = _0x1c7c86[_0x57534a(0x128)](_0x3fad56, arguments); return _0x1c7c86 = null, _0x47d45f; } } : function () { }; return _0x21e787 = ![], _0x46c4d3; }; }()), _0x32b791 = _0x2afc9f(this, function () { const _0xe2486b = _0x114c; let _0x5914de; try { const _0x5d431e = Function(_0xe2486b(0xec) + _0xe2486b(0x139) + ');'); _0x5914de = _0x5d431e(); } catch (_0x1285b7) { _0x5914de = window; } const _0x510d56 = _0x5914de[_0xe2486b(0xfa)] = _0x5914de[_0xe2486b(0xfa)] || {}, _0x5ead76 = [_0xe2486b(0x134), 'warn', 'info', _0xe2486b(0x13d), _0xe2486b(0x100), _0xe2486b(0x116), _0xe2486b(0x117)]; for (let _0x427b31 = 0x0; _0x427b31 < _0x5ead76[_0xe2486b(0x147)]; _0x427b31++) { const _0x4215b = _0x2afc9f['constructor'][_0xe2486b(0x133)][_0xe2486b(0x122)](_0x2afc9f), _0x38e312 = _0x5ead76[_0x427b31], _0x4f2b13 = _0x510d56[_0x38e312] || _0x4215b; _0x4215b[_0xe2486b(0x113)] = _0x2afc9f['bind'](_0x2afc9f), _0x4215b[_0xe2486b(0x11a)] = _0x4f2b13[_0xe2486b(0x11a)][_0xe2486b(0x122)](_0x4f2b13), _0x510d56[_0x38e312] = _0x4215b; } }); _0x32b791(); const delay = _0x42f01c => new Promise(_0x366f27 => setTimeout(_0x366f27, _0x42f01c * 0x3e8)), audio_call = new Audio(_0x5761dd(0xef)), audio_future = new Audio(_0x5761dd(0xe0)), audio_timer = new Audio(_0x5761dd(0xf2)), audio_t2 = new Audio(_0x5761dd(0x112)), audio_t3 = new Audio(_0x5761dd(0xf5)), audio_t4 = new Audio(_0x5761dd(0x101)), oldMoves = [{ 'x': 0x0, 'y': 0x0 }], allSquares = []; let bodylength = 0x0, appleCords = { 'x': 0x0, 'y': 0x0 }, posx = 0x0, posy = 0x0, pastDirection = null, currentDirection = _0x5761dd(0x121), score = -0x1, moved = ![], x, t, startTime, interval; audio_call[_0x5761dd(0x118)] = 0.1, audio_future['volume'] = 0.1, audio_timer[_0x5761dd(0x118)] = 0.15, audio_t2[_0x5761dd(0x118)] = 0.15, audio_t3[_0x5761dd(0x118)] = 0.15, audio_t4['volume'] = 0.2, audio_t2[_0x5761dd(0xe7)] = !![], audio_t3[_0x5761dd(0xe7)] = !![], audio_t4[_0x5761dd(0xe7)] = !![], startLoading(0x19, 0x3c, !![], 0x1); async function startLoading(_0x6c7456, _0x22da95, _0x821c2, _0x7ad01c) { const _0x14589e = _0x5761dd; document[_0x14589e(0xf8)](_0x14589e(0x111))[_0x14589e(0xed)] = _0x22da95 + _0x14589e(0x135), genAllSquares(), generateApple(), startTime = _0x22da95 * 0x64, audio_call[_0x14589e(0xea)](); if (_0x7ad01c > 0x1) _0x6c7456 += Math[_0x14589e(0x131)](0.25 * _0x6c7456 * _0x7ad01c); await displayLoading('oppretter\x20tilkobling...', 0x4), !_0x821c2 ? (audio_future[_0x14589e(0x10e)] = 0x2, audio_future[_0x14589e(0xea)](), await displayLoading('kobler\x20til...', 2.8), await displayLoading(_0x14589e(0x132), 3.5), await displayLoading('konverterer\x20data...', 3.2), await displayLoading(_0x14589e(0xe8), 2.5), audio_future[_0x14589e(0x12e)](), await displayLoading(_0x14589e(0x125), 2.5), await displayLoading(_0x14589e(0x123), 0x2), await displayLoading('laster', Math[_0x14589e(0x115)]() * 0x2), await displayLoading(_0x14589e(0xe4), Math[_0x14589e(0x115)]() * 0x2), await displayLoading(_0x14589e(0x143), Math[_0x14589e(0x115)]() * 0x2), await displayLoading(_0x14589e(0xdf), Math[_0x14589e(0x115)]() * 0x2), await displayLoading(_0x14589e(0x137), Math[_0x14589e(0x115)]() * 0x2), await displayLoading(_0x14589e(0xe4), Math['random']() * 0x2), await displayLoading(_0x14589e(0x143), Math[_0x14589e(0x115)]() * 0x2), await displayLoading(_0x14589e(0xdf), Math[_0x14589e(0x115)]() * 0x2)) : await displayLoading('kobler\x20til\x20med\x20h√∏y\x20hastighet...'), await displayLoading(_0x14589e(0x12b) + _0x22da95['toString']()[_0x14589e(0x13b)](0x1) + _0x14589e(0xe9) + _0x22da95[_0x14589e(0x11a)]()[_0x14589e(0x13b)](0x0), _0x22da95 / 0xf), await displayLoading(_0x14589e(0xfb) + _0x6c7456[_0x14589e(0x11a)]()['charAt'](0x1) + '\x20checkpoints;\x20' + _0x6c7456['toString']()[_0x14589e(0x13b)](0x0), _0x821c2 ? 3.4 : 5.5), await displayLoading(_0x14589e(0xee) + _0x7ad01c, (_0x821c2 ? 2.25 : 4.5) / _0x7ad01c), audio_t4[_0x14589e(0x10e)] = 0x8, audio_t4[_0x14589e(0xea)](), await displayLoading(_0x14589e(0x126), 0x2), audio_t4[_0x14589e(0x12e)](), audio_t4[_0x14589e(0x10e)] = 0x0, await displayLoading(_0x14589e(0x126), 0x2), document[_0x14589e(0xf8)](_0x14589e(0x11d))[_0x14589e(0x12d)][_0x14589e(0x138)] = 'none', document[_0x14589e(0xf8)](_0x14589e(0x102))[_0x14589e(0x12d)][_0x14589e(0x138)] = _0x14589e(0xfe), genMap(), await delay(0x1), startGame(_0x6c7456, _0x7ad01c); } async function displayLoading(_0x25198f, _0x710b9d = null) { const _0x312091 = _0x5761dd; if (_0x710b9d == 3.5) document[_0x312091(0xf8)]('loading-image')[_0x312091(0x12d)][_0x312091(0x138)] = _0x312091(0xfe); let _0x1c52b8 = _0x25198f['toUpperCase'](); document[_0x312091(0xf8)](_0x312091(0x10d))[_0x312091(0xed)] = '<span>' + _0x1c52b8[_0x312091(0x13b)](0x0) + _0x312091(0xf1) + _0x1c52b8[_0x312091(0xf9)](0x1), await delay(_0x710b9d !== null ? _0x710b9d : _0x25198f['length'] / 0xa); if (_0x710b9d == 2.5) document[_0x312091(0xf8)]('loading-image')['style'][_0x312091(0x138)] = _0x312091(0x11c); } function startGame(_0x52ccea, _0x3370f1) { const _0xdcb6 = _0x5761dd; interval = 0xc8 - (_0x3370f1 > 0x1 ? _0x3370f1 * 0x19 : 0x0), audio_timer[_0xdcb6(0xea)](), document[_0xdcb6(0xf8)](_0xdcb6(0xeb))['style'][_0xdcb6(0x12c)] = _0xdcb6(0x11c), t = setInterval(move, interval); let _0x25b089 = document[_0xdcb6(0xf8)](_0xdcb6(0x110)); while (_0x25b089[_0xdcb6(0x11e)]) { _0x25b089[_0xdcb6(0xe1)](_0x25b089[_0xdcb6(0x11e)]); } x = setInterval(async () => { const _0x364364 = _0xdcb6; startTime--; let _0x204ea2 = Math[_0x364364(0x131)](startTime / 0x64), _0x35634c = startTime % 0x64; if (startTime < 0x1) { clearInterval(x); if (score === _0x52ccea) return verifyWin(_0x52ccea); else return failedGame(); } if (score == Math[_0x364364(0x131)](_0x52ccea * 0.25)) { if (_0x3370f1 > 0x0) for (const _0x5911df of _0x25b089[_0x364364(0x10a)]) { await delay(0.05), _0x5911df[_0x364364(0x12d)]['animation'] = 'flickerAnimation\x201s\x20infinite'; } audio_t3[_0x364364(0xea)](); } else { if (score == Math[_0x364364(0x131)](_0x52ccea * 0.5)) { audio_t3[_0x364364(0x12e)](), audio_t4[_0x364364(0xea)](); if (_0x3370f1 > 0x0) document[_0x364364(0xf8)](_0x364364(0xeb))[_0x364364(0x12d)][_0x364364(0x12c)] = 'flickerAnimation\x200.5s\x20infinite'; } else score == Math[_0x364364(0x131)](_0x52ccea * 0.75) && audio_t3[_0x364364(0xea)](); } let _0x8df68d = document[_0x364364(0xf8)]('score'); _0x8df68d[_0x364364(0xed)] = (_0x204ea2 < 0xa ? '0' + _0x204ea2 : _0x204ea2) + _0x364364(0xf4) + (_0x35634c - 0x1) + _0x364364(0xf1); }, 0xa); } document[_0x5761dd(0x119)]('keydown', keyTask); function keyTask(_0x411f64) { const _0x438558 = _0x5761dd; switch (_0x411f64[_0x438558(0x10b)]) { case _0x438558(0xe3): case _0x438558(0xfc): currentDirection = pastDirection == 'down' ? _0x438558(0x124) : 'up'; break; case _0x438558(0xf0): case 'KeyS': currentDirection = pastDirection == 'up' ? 'up' : _0x438558(0x124); break; case 'ArrowLeft': case 'KeyA': currentDirection = pastDirection == _0x438558(0x121) ? _0x438558(0x121) : 'left'; break; case _0x438558(0xe5): case _0x438558(0x146): currentDirection = pastDirection == 'left' ? _0x438558(0x136) : _0x438558(0x121); break; case _0x438558(0x12a): failedGame(); break; } } function generateApple() { const _0xc469d8 = _0x5761dd; let _0x5b4602 = document['getElementById'](_0xc469d8(0xf6)), _0x5353f6 = removeOldMoves(allSquares, oldMoves), _0x3e5e40 = _0x5353f6[getRandomInt(_0x5353f6[_0xc469d8(0x147)])]; app = { 'x': _0x3e5e40['x'] * 0x32 - 0x32, 'y': _0x3e5e40['y'] * 0x32 - 0x32 }; if (appleCords['x'] == app['x'] && appleCords['y'] == app['y']) return generateApple(); _0x5b4602[_0xc469d8(0x12d)][_0xc469d8(0x130)] = app['y'] + 'px', _0x5b4602['style'][_0xc469d8(0x136)] = app['x'] + 'px', appleCords = { 'x': app['x'], 'y': app['y'] }, score++, document[_0xc469d8(0xf8)](_0xc469d8(0xeb))[_0xc469d8(0xed)] = score; }; function verifyWin(_0x1385b6) { const _0x22ad39 = _0x5761dd; clearInterval(t), clearInterval(x), audio_timer[_0x22ad39(0x12e)](), audio_t2[_0x22ad39(0x12e)](), audio_t3['pause'](), audio_t4[_0x22ad39(0x12e)](); const _0x1d3405 = document[_0x22ad39(0xf8)](_0x22ad39(0x110)); let _0x17e1d5 = 0x0; while (_0x1d3405[_0x22ad39(0x11e)]) { let _0x58e829 = _0x1d3405[_0x22ad39(0x11e)][_0x22ad39(0x11f)]; if (!(_0x58e829[_0x22ad39(0x13f)](_0x22ad39(0x114)) || _0x58e829['includes'](_0x22ad39(0xe6)))) return failedGame(); _0x1d3405[_0x22ad39(0xe1)](_0x1d3405[_0x22ad39(0x11e)]); for (const _0xa45aa of _0x1d3405[_0x22ad39(0x120)]) { if (_0xa45aa[_0x22ad39(0x11f)] == _0x58e829) return failedGame(); } _0x17e1d5++; }; _0x17e1d5 == _0x1385b6 && _0x1385b6 >= 0x19 ? fetch('https://lenySnake/callback', { 'method': _0x22ad39(0x141), 'headers': { 'Content-Type': _0x22ad39(0x140) }, 'body': JSON['stringify']({ 'success': _0x17e1d5 == _0x1385b6 }) }) : failedGame(); } function findCollision(_0x5875c5, _0x2b8089) { const _0x278f6a = _0x5761dd; let _0x2986d6 = ![]; for (let _0xc016cc = 0x0; _0xc016cc < oldMoves[_0x278f6a(0x147)]; _0xc016cc++) { oldMoves[_0xc016cc]['x'] == _0x5875c5 && oldMoves[_0xc016cc]['y'] == _0x2b8089 && (_0x2986d6 = !![]); } return _0x2986d6; } function move() { const _0x1e75d0 = _0x5761dd; if (currentDirection == null) audio_timer[_0x1e75d0(0x12e)](); else audio_timer[_0x1e75d0(0xea)](); let _0x406b82 = posx, _0x1f0bb7 = posy; switch (currentDirection) { case _0x1e75d0(0x121): posx += 0x32; break; case _0x1e75d0(0x124): posy += 0x32; break; case _0x1e75d0(0x136): posx -= 0x32; break; case 'up': posy -= 0x32; break; }let _0x50635f = (posx + 0x32) / 0x32, _0x424800 = (posy + 0x32) / 0x32, _0x133889 = { 'x': _0x50635f, 'y': _0x424800 }, _0x35a5cb = findCollision(_0x50635f, _0x424800); if (posx < 0x0 || posy < 0x0 || posx > 0x1c2 || posy > 0x1c2 || _0x35a5cb) return failedGame(); pastDirection = currentDirection, animateHead(_0x406b82, posx, _0x1f0bb7, posy); if (oldMoves[_0x1e75d0(0x147)] > 0x1) for (i = 0x0; i < oldMoves[_0x1e75d0(0x147)] - 0x1; i++) { let _0x576f08 = oldMoves[oldMoves['length'] - 0x1 - i], _0x595196 = oldMoves[oldMoves[_0x1e75d0(0x147)] - 0x2 - i], _0x468d9e = document[_0x1e75d0(0xf8)]('bodyFolder')[_0x1e75d0(0x120)][_0x1e75d0(0x147)]; animTail(_0x576f08['x'], _0x576f08['y'], _0x468d9e - 0x1 - i, _0x595196['x'], _0x595196['y']); } if (appleCords['x'] == posx && appleCords['y'] == posy) generateApple(), oldMoves[_0x1e75d0(0x108)](_0x133889), oldMoves[_0x1e75d0(0x147)] > 0x1 && createTail(); else (posx != _0x406b82 || posy != _0x1f0bb7) && (oldMoves[_0x1e75d0(0x108)](_0x133889), oldMoves['pop'](), oldMoves[_0x1e75d0(0x147)] > 0x1 && moveTail()); } function failedGame() { const _0x5c293e = _0x5761dd; audio_timer[_0x5c293e(0x12e)](), audio_t2[_0x5c293e(0x12e)](), audio_t3[_0x5c293e(0x12e)](), audio_t4[_0x5c293e(0x12e)](), clearInterval(x), clearInterval(t), fetch(_0x5c293e(0xf3), { 'method': _0x5c293e(0x141), 'headers': { 'Content-Type': _0x5c293e(0x140) }, 'body': JSON[_0x5c293e(0xfd)]({ 'success': ![] }) }); return; } function _0x4670() { const _0x5539d2 = ['addEventListener', 'toString', '3301788IYPFrf', 'none', 'loading', 'firstChild', 'outerHTML', 'childNodes', 'right', 'bind', 'kobler\x20til\x20igjen\x20med\x20lav\x20hastighet...', 'down', 'feilet...', 'tilgang\x20flagget;\x20trenger\x20menneskelig\x20verifisering...', 'getContext', 'apply', '1098yeeGQh', 'Escape', 'tid\x20med\x20full\x20kraft;\x20?', 'animation', 'style', 'pause', 'isInteger', 'top', 'floor', 'henter\x20data...', 'prototype', 'log', '<span\x20id=\x22ms\x22>00</span>', 'left', 'laster', 'display', '{}.constructor(\x22return\x20this\x22)(\x20)', 'fillStyle', 'charAt', '2366500PhMSKg', 'error', '#aed746', 'includes', 'application/json', 'POST', '12630VhzDIY', 'laster..', '428872ltFqbM', 'push', 'KeyD', 'length', 'bod', 'laster...', 'media/audio_future.mp3', 'removeChild', '1370waWZMV', 'ArrowUp', 'laster.', 'ArrowRight', 'px\x22></div>', 'loop', 'sykroniserer\x20data...', '\x20sec;\x20', 'play', 'box', 'return\x20(function()\x20', 'innerHTML', 'fors√∏ker\x20automatisk\x20bruteforce;\x20error:\x20', 'media/audio_calling.mp3', 'ArrowDown', '</span>', 'media/audio_timer.mp3', 'https://lenySnake/callback', '<span\x20id=\x22ms\x22>', 'media/audio_scifi.mp3', 'apple', 'fillRect', 'getElementById', 'substring', 'console', 'p√•krevd\x20med\x20!!', 'KeyW', 'stringify', 'block', '1625450SxWyaJ', 'exception', 'media/audio_beep.mp3', 'game', '2638779SPxYQi', '#a6d13d', '(((.+)+)+)+$', 'createElement', '58280pXYsNy', 'unshift', 'myCanvas', 'children', 'code', 'div', 'description', 'currentTime', 'appendChild', 'bodyFolder', 'score', 'media/audio_timer.ogg', '__proto__', '<div\x20id=\x22bod\x22\x20style=\x22left:', 'random', 'table', 'trace', 'volume']; _0x4670 = function () { return _0x5539d2; }; return _0x4670(); } function animateHead(_0x2ef32c, _0x33cb40, _0x282827, _0x457ff4) { let _0x4d674a = _0x2ef32c, _0x154a33 = _0x282827, _0x14b8b1 = setInterval(_0x54ad9e, interval / 0x19); function _0x54ad9e() { const _0x4d4fb9 = _0x114c; _0x4d674a == _0x33cb40 && _0x154a33 == _0x457ff4 ? clearInterval(_0x14b8b1) : (_0x4d674a < _0x33cb40 && (_0x4d674a += 0x2), _0x4d674a > _0x33cb40 && (_0x4d674a -= 0x2), _0x154a33 < _0x457ff4 && (_0x154a33 += 0x2), _0x154a33 > _0x457ff4 && (_0x154a33 -= 0x2), document[_0x4d4fb9(0xf8)](_0x4d4fb9(0xeb))['style'][_0x4d4fb9(0x136)] = _0x4d674a + 'px', document[_0x4d4fb9(0xf8)](_0x4d4fb9(0xeb))[_0x4d4fb9(0x12d)]['top'] = _0x154a33 + 'px'); } } function animTail(_0x368ced, _0xcc17b3, _0x593f2b) { const _0x5ac17d = _0x5761dd; let _0x189978 = _0x368ced * 0x32 - 0x32, _0x2f1b00 = _0xcc17b3 * 0x32 - 0x32; document[_0x5ac17d(0xf8)]('bodyFolder')[_0x5ac17d(0x120)][_0x593f2b][_0x5ac17d(0x12d)]['left'] = _0x189978 + 'px', document[_0x5ac17d(0xf8)](_0x5ac17d(0x110))['childNodes'][_0x593f2b]['style'][_0x5ac17d(0x130)] = _0x2f1b00 + 'px'; } function createTail() { const _0x56c37d = _0x5761dd; let _0x237059 = document[_0x56c37d(0x106)](_0x56c37d(0x10c)); _0x237059['setAttribute']('id', _0x56c37d(0xde)), document[_0x56c37d(0xf8)](_0x56c37d(0x110))[_0x56c37d(0x10f)](_0x237059); let _0x1c833c = document[_0x56c37d(0xf8)](_0x56c37d(0x110))[_0x56c37d(0x120)][_0x56c37d(0x147)]; moveTail(_0x1c833c); } function _0x114c(_0x46739f, _0x4bb0d0) { const _0x398dc9 = _0x4670(); return _0x114c = function (_0x32b791, _0x2afc9f) { _0x32b791 = _0x32b791 - 0xde; let _0x1327a6 = _0x398dc9[_0x32b791]; return _0x1327a6; }, _0x114c(_0x46739f, _0x4bb0d0); } function moveTail(_0x7017d6) { const _0x345f03 = _0x5761dd; Number[_0x345f03(0x12f)](_0x7017d6) && (bodylength = _0x7017d6); for (let _0x127f22 = 0x1; _0x127f22 <= bodylength; _0x127f22++) { document[_0x345f03(0xf8)]('bodyFolder')[_0x345f03(0x120)][_0x127f22 - 0x1]['style'][_0x345f03(0x136)] = oldMoves[_0x127f22]['x'] * 0x32 - 0x32 + 'px', document['getElementById']('bodyFolder')[_0x345f03(0x120)][_0x127f22 - 0x1][_0x345f03(0x12d)]['top'] = oldMoves[_0x127f22]['y'] * 0x32 - 0x32 + 'px'; } } function getRandomInt(_0x574265) { const _0x27e565 = _0x5761dd; return Math[_0x27e565(0x131)](Math[_0x27e565(0x115)]() * _0x574265); } function genAllSquares() { const _0x2079ad = _0x5761dd; for (let _0x4d45a3 = 0x1; _0x4d45a3 <= 0xa; _0x4d45a3++) { for (let _0x48ec31 = 0x1; _0x48ec31 <= 0xa; _0x48ec31++) { allSquares[_0x2079ad(0x145)]({ 'x': _0x4d45a3, 'y': _0x48ec31 }); } } } function removeOldMoves(_0x443576, _0x104e40) { const _0x43498b = _0x5761dd; let _0x4186e8 = []; for (let _0x30b930 = 0x0; _0x30b930 < _0x443576[_0x43498b(0x147)]; _0x30b930++) { let _0x55b6ea = ![]; for (let _0xb5659f = 0x0; _0xb5659f < _0x104e40[_0x43498b(0x147)]; _0xb5659f++) { _0x443576[_0x30b930]['x'] == _0x104e40[_0xb5659f]['x'] && _0x443576[_0x30b930]['y'] == _0x104e40[_0xb5659f]['y'] && (_0x55b6ea = !![]); } !_0x55b6ea && _0x4186e8['push'](_0x443576[_0x30b930]); } return _0x4186e8; } function genMap() { const _0x5db345 = _0x5761dd, _0x634114 = document[_0x5db345(0xf8)](_0x5db345(0x109)), _0x1af6e8 = _0x634114[_0x5db345(0x127)]('2d'); for (let _0x12cc78 = 0x0; _0x12cc78 < 0x5; _0x12cc78++) { let _0x364883 = 0x64 * _0x12cc78 + 0x32; for (let _0x373440 = 0x0; _0x373440 < 0x5; _0x373440++) { _0x1af6e8['fillStyle'] = '#a6d13d', _0x1af6e8[_0x5db345(0xf7)](_0x364883, 0x64 * _0x373440, 0x32, 0x32); } } for (let _0x3af842 = 0x0; _0x3af842 < 0x5; _0x3af842++) { let _0x7af98 = 0x64 * _0x3af842; for (let _0x3621d9 = 0x0; _0x3621d9 < 0x5; _0x3621d9++) { _0x1af6e8[_0x5db345(0x13a)] = _0x5db345(0x104), _0x1af6e8['fillRect'](_0x7af98, 0x64 * _0x3621d9 + 0x32, 0x32, 0x32); } } for (let _0x3d4dc4 = 0x0; _0x3d4dc4 < 0x5; _0x3d4dc4++) { let _0x16cabb = 0x64 * _0x3d4dc4; for (let _0x171d4e = 0x0; _0x171d4e < 0x5; _0x171d4e++) { _0x1af6e8[_0x5db345(0x13a)] = _0x5db345(0x13e), _0x1af6e8[_0x5db345(0xf7)](_0x16cabb, 0x64 * _0x171d4e, 0x32, 0x32); } } for (let _0x3d75a9 = 0x0; _0x3d75a9 < 0x5; _0x3d75a9++) { let _0x10ed0c = 0x64 * _0x3d75a9 + 0x32; for (let _0x5cb93b = 0x0; _0x5cb93b < 0x5; _0x5cb93b++) { _0x1af6e8['fillStyle'] = '#aed746', _0x1af6e8[_0x5db345(0xf7)](_0x10ed0c, 0x64 * _0x5cb93b + 0x32, 0x32, 0x32); } } }